{"version":3,"file":"sc-order-shipping-address.js","sourceRoot":"","sources":["../../../../../src/components/controllers/checkout-form/order-shipping-address/sc-order-shipping-address.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Method, Prop, State } from '@stencil/core';\nimport { state as checkoutState, onChange } from '@store/checkout';\nimport { lockCheckout, unLockCheckout } from '@store/checkout/mutations';\nimport { __ } from '@wordpress/i18n';\nimport { createOrUpdateCheckout } from '../../../../services/session';\n\nimport { Address, Checkout } from '../../../../types';\nimport { fullShippingAddressRequired } from '@store/checkout/getters';\nimport { formLoading } from '@store/form/getters';\n\n@Component({\n  tag: 'sc-order-shipping-address',\n  styleUrl: 'sc-order-shipping-address.scss',\n  shadow: true,\n})\nexport class ScOrderShippingAddress {\n  private input: HTMLScAddressElement | HTMLScCompactAddressElement;\n\n  /** Label for the field. */\n  @Prop() label: string;\n\n  /** Is this required (defaults to false) */\n  @Prop({ mutable: true, reflect: true }) required: boolean = false;\n\n  /** Show the   address */\n  @Prop({ mutable: true }) full: boolean;\n\n  /** Show the name field. */\n  @Prop({ reflect: true }) showName: boolean;\n\n  /** Show the placeholder fields. */\n  @Prop() namePlaceholder: string = __('Name or Company Name', 'surecart');\n  @Prop() countryPlaceholder: string = __('Country', 'surecart');\n  @Prop() cityPlaceholder: string = __('City', 'surecart');\n  @Prop() line1Placeholder: string = __('Address', 'surecart');\n  @Prop() line2Placeholder: string = __('Address Line 2', 'surecart');\n  @Prop() postalCodePlaceholder: string = __('Postal Code/Zip', 'surecart');\n  @Prop() statePlaceholder: string = __('State/Province/Region', 'surecart');\n\n  /** Default country for address */\n  @Prop() defaultCountry: string;\n\n  /** Whether to require the name in the address */\n  @Prop({ reflect: true }) requireName: boolean = false;\n\n  /** Placeholder values. */\n  @Prop() placeholders: Partial<Address> = {\n    name: __('Name or Company Name', 'surecart'),\n    country: __('Country', 'surecart'),\n    city: __('City', 'surecart'),\n    line_1: __('Address', 'surecart'),\n    line_2: __('Address Line 2', 'surecart'),\n    postal_code: __('Postal Code/Zip', 'surecart'),\n    state: __('State/Province/Region', 'surecart'),\n  };\n\n  /** Address to pass to the component */\n  @State() address: Partial<Address> = {\n    country: null,\n    city: null,\n    line_1: null,\n    line_2: null,\n    postal_code: null,\n    state: null,\n  };\n\n  async updateAddressState(address: Partial<Address>) {\n    if (JSON.stringify(address) === JSON.stringify(this.address)) return; // no change, don't update.\n    this.address = address;\n    try {\n      lockCheckout('shipping-address');\n      checkoutState.checkout = (await createOrUpdateCheckout({\n        id: checkoutState.checkout.id,\n        data: {\n          shipping_address: this.address as Address,\n        },\n      })) as Checkout;\n    } catch (e) {\n      console.error(e);\n    } finally {\n      unLockCheckout('shipping-address');\n    }\n  }\n\n  @Method()\n  async reportValidity() {\n    return this.input?.reportValidity?.();\n  }\n\n  componentWillLoad() {\n    if (this.defaultCountry && !this.address.country) {\n      this.address.country = this.defaultCountry;\n    }\n\n    onChange('checkout', () => {\n      // check if address keys are empty, if so, update them.\n      const addressKeys = Object.keys(this.address).filter(key => key !== 'country');\n      const emptyAddressKeys = addressKeys.filter(key => !this.address[key]);\n      if (emptyAddressKeys.length === addressKeys.length) {\n        this.address = { ...this.address, ...(checkoutState.checkout?.shipping_address as Address) };\n      }\n    });\n  }\n\n  render() {\n    // use full if checkout requires it, it's set, or we're showing/requiring name field.\n    if (fullShippingAddressRequired() || this.full || this.requireName || this.showName) {\n      return (\n        <sc-address\n          exportparts=\"label, help-text, form-control, input__base, select__base, columns, search__base, menu__base\"\n          ref={el => (this.input = el as any)}\n          label={this.label || __('Shipping Address', 'surecart')}\n          placeholders={{\n            name: this.namePlaceholder,\n            country: this.countryPlaceholder,\n            city: this.cityPlaceholder,\n            line_1: this.line1Placeholder,\n            line_2: this.line2Placeholder,\n            postal_code: this.postalCodePlaceholder,\n            state: this.statePlaceholder,\n          }}\n          required={this.required}\n          loading={formLoading()}\n          address={this.address}\n          show-name={this.showName}\n          require-name={this.requireName}\n          onScChangeAddress={e => this.updateAddressState(e.detail)}\n        ></sc-address>\n      );\n    }\n    return (\n      <sc-compact-address\n        ref={el => (this.input = el as any)}\n        required={this.required}\n        loading={formLoading()}\n        address={this.address}\n        placeholders={{\n          name: this.namePlaceholder,\n          country: this.countryPlaceholder,\n          city: this.cityPlaceholder,\n          line_1: this.line1Placeholder,\n          line_2: this.line2Placeholder,\n          postal_code: this.postalCodePlaceholder,\n          state: this.statePlaceholder,\n        }}\n        label={this.label}\n        onScChangeAddress={e => this.updateAddressState(e.detail)}\n      ></sc-compact-address>\n    );\n  }\n}\n"]}