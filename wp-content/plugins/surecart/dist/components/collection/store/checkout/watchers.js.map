{"version":3,"file":"watchers.js","sourceRoot":"","sources":["../../../src/store/checkout/watchers.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,SAAS,CAAC;AAC9C,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAElE;;;GAGG;AACH,QAAQ,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAE5D,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE;EACf,IAAI,IAAI,KAAK,UAAU,EAAE;IACvB,MAAM,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;IACvD,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,EAAE,EAAE;MAChB,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC3B;GACF;AACH,CAAC,CAAC,CAAC","sourcesContent":["import state, { onChange, on } from './store';\nimport { getCheckout, setCheckout } from '../checkouts/mutations';\n\n/**\n * When the checkout changes, update the\n * checkout in localstorage.\n */\nonChange('checkout', val => setCheckout(val, state.formId));\n\non('get', prop => {\n  if (prop === 'checkout') {\n    const checkout = getCheckout(state.formId, state.mode);\n    if (checkout?.id) {\n      state.checkout = checkout;\n    }\n  }\n});\n"]}