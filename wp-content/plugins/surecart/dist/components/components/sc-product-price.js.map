{"file":"sc-product-price.js","mappings":";;;;;;;;AAAA,MAAM,iBAAiB,GAAG,8qBAA8qB;;;;;;;;;;;;;;;;;;;;;;;;;;;aCqC3rB,UAAE;;4WAUG,UAAE,yEAGqB,UAAE,2QAED,UAAE,uDAMhB,UAAE,kaAMX,UAAE;;;;kBAKW,UAAE;;;QAGV,UAAE;;;;;;;;;QAcJ,UAAE;;gOAUiB,UAAE,gGACG,UAAE,6aAWT,eAAO,CAAC,UAAE,oKAE5B,eAAO,CAAC,UAAE,sVAOQ,UAAE,iWAEkC,UAAE,2BAA2B,UAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/components/controllers/product/sc-product-price/sc-product-price.scss?tag=sc-product-price&encapsulation=shadow","./src/components/controllers/product/sc-product-price/sc-product-price.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.price {\n  display: flex;\n  flex-direction: column;\n  gap: var(--sc-spacing-xxx-small);\n  text-align: var(--sc-product-price-alignment, left);\n  justify-content: var(--sc-product-price-alignment, left);\n\n  &__amounts {\n    display: inline-flex;\n    flex-wrap: wrap;\n    align-items: baseline;\n    gap: var(--sc-spacing-xx-small);\n    justify-content: var(--sc-product-price-alignment, left);\n    text-align: var(--sc-product-price-alignment, left);\n  }\n\n  &__scratch {\n    text-decoration: line-through;\n    opacity: 0.75;\n  }\n\n  &__interval {\n    font-size: min(var(--sc-font-size-small), 16px);\n    opacity: 0.75;\n  }\n\n  &__details {\n    font-size: min(var(--sc-font-size-small), 16px);\n    opacity: 0.75;\n  }\n\n  &__sale-badge {\n    font-size: min(1em, 14px);\n    align-self: center;\n  }\n}\n","import { Component, h, Prop, Fragment, Host } from '@stencil/core';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport { Price, Variant } from '../../../../types';\nimport { state } from '@store/product';\nimport { intervalString } from '../../../../functions/price';\n\n@Component({\n  tag: 'sc-product-price',\n  styleUrl: 'sc-product-price.scss',\n  shadow: true,\n})\nexport class ScProductPrice {\n  /** The product's prices. */\n  @Prop() prices: Price[];\n\n  /** The sale text */\n  @Prop() saleText: string;\n\n  /** The product id */\n  @Prop() productId: string;\n\n  renderRange() {\n    if (state[this.productId]?.prices?.length === 1) {\n      return this.renderPrice(state[this.productId]?.prices[0]);\n    }\n    return <sc-price-range prices={state[this.productId]?.prices} />;\n  }\n\n  renderVariantPrice(selectedVariant: Variant) {\n    const variant = state[this.productId]?.variants?.find(variant => variant?.id === selectedVariant?.id);\n    return this.renderPrice(state[this.productId].selectedPrice, variant?.amount);\n  }\n\n  renderPrice(price: Price, variantAmount?: number) {\n    const amount = variantAmount ?? price?.amount ?? 0;\n\n    if (price?.ad_hoc) {\n      return __('Custom Amount', 'surecart');\n    }\n\n    return (\n      <Fragment>\n        <div class=\"price\" id=\"price\">\n          <div class=\"price__amounts\">\n            {!!price?.scratch_amount && price?.scratch_amount !== amount && (\n              <Fragment>\n                {price?.scratch_amount === 0 ? (\n                  __('Free', 'surecart')\n                ) : (\n                  <Fragment>\n                    <sc-visually-hidden>{__('The price was', 'surecart')} </sc-visually-hidden>\n                    <sc-format-number class=\"price__scratch\" part=\"price__scratch\" type=\"currency\" currency={price.currency} value={price?.scratch_amount}></sc-format-number>\n                    <sc-visually-hidden> {__('now discounted to', 'surecart')}</sc-visually-hidden>\n                  </Fragment>\n                )}\n              </Fragment>\n            )}\n\n            {amount === 0 ? __('Free', 'surecart') : <sc-format-number class=\"price__amount\" type=\"currency\" value={amount} currency={price?.currency}></sc-format-number>}\n\n            <div class=\"price__interval\">\n              {price?.recurring_period_count && 1 < price?.recurring_period_count && (\n                <sc-visually-hidden>\n                  {' '}\n                  {__('This is a repeating price. Payment will happen', 'surecart')}{' '}\n                  {intervalString(price, {\n                    showOnce: true,\n                    abbreviate: false,\n                    labels: {\n                      interval: __('every', 'surecart'),\n                      period:\n                        /** translators: used as in time period: \"for 3 months\" */\n                        __('for', 'surecart'),\n                    },\n                  })}\n                </sc-visually-hidden>\n              )}\n\n              <span aria-hidden=\"true\">\n                {intervalString(price, {\n                  showOnce: true,\n                  abbreviate: false,\n                  labels: {\n                    interval: '/',\n                    period:\n                      /** translators: used as in time period: \"for 3 months\" */\n                      __('for', 'surecart'),\n                  },\n                })}\n              </span>\n            </div>\n\n            {!!price?.scratch_amount && (\n              <sc-tag type=\"primary\" pill class=\"price__sale-badge\">\n                {this.saleText || (\n                  <Fragment>\n                    <sc-visually-hidden>{__('This product is available for sale.', 'surecart')} </sc-visually-hidden>\n                    <span aria-hidden=\"true\">{__('Sale', 'surecart')}</span>\n                  </Fragment>\n                )}\n              </sc-tag>\n            )}\n          </div>\n\n          {(!!price?.trial_duration_days || (!!price?.setup_fee_enabled && price?.setup_fee_amount)) && (\n            <div class=\"price__details\">\n              {!!price?.trial_duration_days && (\n                <Fragment>\n                  <sc-visually-hidden>{sprintf(__('You have a %d-day trial before payment becomes necessary.', 'surecart'), price.trial_duration_days)}</sc-visually-hidden>\n                  <span class=\"price__trial\" aria-hidden=\"true\">\n                    {sprintf(_n('Starting in %s day.', 'Starting in %s days.', price.trial_duration_days, 'surecart'), price.trial_duration_days)}\n                  </span>\n                </Fragment>\n              )}\n\n              {!!price?.setup_fee_enabled && price?.setup_fee_amount && (\n                <span class=\"price__setup-fee\">\n                  <sc-visually-hidden>{__('This product has', 'surecart')} </sc-visually-hidden>\n                  <sc-format-number type=\"currency\" value={Math.abs(price.setup_fee_amount)} currency={price?.currency}></sc-format-number>{' '}\n                  {price?.setup_fee_name || (price?.setup_fee_amount < 0 ? __('Discount', 'surecart') : __('Setup Fee', 'surecart'))}.\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n      </Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Host role=\"paragraph\">\n        {(() => {\n          if (state[this.productId]?.selectedVariant) {\n            return this.renderVariantPrice(state[this.productId]?.selectedVariant);\n          }\n\n          if (state[this.productId].selectedPrice) {\n            return this.renderPrice(state[this.productId].selectedPrice);\n          }\n\n          if (state[this.productId].prices.length) {\n            return this.renderRange();\n          }\n\n          return <slot />;\n        })()}\n      </Host>\n    );\n  }\n}\n"],"version":3}